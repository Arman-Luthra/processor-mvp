@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
      --background: 0 0% 100%;
--foreground: 20 14.3% 4.1%;
--muted: 60 4.8% 95.9%;
--muted-foreground: 25 5.3% 44.7%;
--popover: 0 0% 100%;
--popover-foreground: 20 14.3% 4.1%;
--card: 0 0% 100%;
--card-foreground: 20 14.3% 4.1%;
--border: 20 5.9% 90%;
--input: 20 5.9% 90%;
--primary: 207 90% 54%;
--primary-foreground: 211 100% 99%;
--secondary: 60 4.8% 95.9%;
--secondary-foreground: 24 9.8% 10%;
--accent: 60 4.8% 95.9%;
--accent-foreground: 24 9.8% 10%;
--destructive: 0 84.2% 60.2%;
--destructive-foreground: 60 9.1% 97.8%;
--ring: 20 14.3% 4.1%;
--radius: 0.5rem;
  }
  .dark {
      --background: 240 10% 3.9%;
--foreground: 0 0% 98%;
--muted: 240 3.7% 15.9%;
--muted-foreground: 240 5% 64.9%;
--popover: 240 10% 3.9%;
--popover-foreground: 0 0% 98%;
--card: 240 10% 3.9%;
--card-foreground: 0 0% 98%;
--border: 240 3.7% 15.9%;
--input: 240 3.7% 15.9%;
--primary: 207 90% 54%;
--primary-foreground: 211 100% 99%;
--secondary: 240 3.7% 15.9%;
--secondary-foreground: 0 0% 98%;
--accent: 240 3.7% 15.9%;
--accent-foreground: 0 0% 98%;
--destructive: 0 62.8% 30.6%;
--destructive-foreground: 0 0% 98%;
--ring: 240 4.9% 83.9%;
--radius: 0.5rem;
  }

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/* Styling for TipTap editor elements */

/* Base editor styling */
.ProseMirror {
  min-height: 30px;
  padding: 4px 0;
  width: 100%;
  cursor: text;
  white-space: pre-wrap; /* Ensure line breaks work properly */
}

/* Make sure paragraphs have proper spacing */
.ProseMirror p {
  margin: 0;
  min-height: 1.5em;
}

/* Block hover and active state styles */
.editor-content {
  position: relative;
  border-radius: 0.25rem;
  transition: background-color 0.3s ease;
}

/* Add blue background on hover */
.editor-content:hover {
  background-color: rgba(59, 130, 246, 0.05); /* Very light blue */
}

/* Add animation when the editor receives focus */
@keyframes highlight-block {
  0% { background-color: rgba(59, 130, 246, 0.1); }
  100% { background-color: transparent; }
}

.ProseMirror:focus {
  animation: highlight-block 1s ease forwards;
  outline: none;
}

/* Make sure the animation layer doesn't interfere with editing */
.ProseMirror:focus::after {
  pointer-events: none;
}

/* Drag and drop styles */
[data-dnd-draggable] {
  /* Allow translations using CSS variables but prevent scaling */
  transform: translate3d(var(--translate-x, 0), var(--translate-y, 0), 0) scale(1) !important;
  /* Prevent width/height changes during drag */
  width: var(--original-width, 100%) !important;
  height: var(--original-height, auto) !important;
  transform-origin: 0 0 !important;
}

/* Add proper transition for draggable elements */
.sortable-item {
  transition: transform 200ms cubic-bezier(0.25, 1, 0.5, 1);
}

/* Make entire editor clickable by removing any float/positioning that might interfere */
.editor-content {
  width: 100%;
  cursor: text;
}

/* Hide placeholder on all blocks by default */
.ProseMirror p.is-empty::before {
  content: none;
  display: none;
}

/* Only show placeholder on the first block */
.first-block .ProseMirror p.is-empty::before {
  content: "Start writing";
  color: #adb5bd;
  pointer-events: none;
  float: left;
  height: 0;
  display: block;
}

/* Title placeholder styling */
[contenteditable][data-placeholder]:empty::before {
  content: attr(data-placeholder);
  color: #adb5bd;
  pointer-events: none;
}

/* Drag and drop indicators */
.drag-over-top {
  box-shadow: 0 -2px 0 0 #3b82f6;
  position: relative;
  z-index: 10;
}

.drag-over-bottom {
  box-shadow: 0 2px 0 0 #3b82f6;
  position: relative;
  z-index: 10;
}

/* Drag handle styles */
.drag-handle {
  cursor: grab;
}

.drag-handle:active {
  cursor: grabbing;
}

/* Reset all list styling that might be inherited by headings */
.ProseMirror h1, .ProseMirror h2, .ProseMirror h3 {
  list-style: none !important;
  margin-left: 0 !important;
  padding-left: 0 !important;
}

/* Ensure headings don't have bullet points */
.ProseMirror h1::before, .ProseMirror h2::before, .ProseMirror h3::before {
  content: none !important;
  display: none !important;
}

/* Bullet lists */
.ProseMirror ul {
  list-style-type: disc;
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

/* Ordered lists */
.ProseMirror ol {
  list-style-type: decimal;
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

/* List items */
.ProseMirror li {
  margin-bottom: 0.25rem;
  position: relative;
}

/* Nested lists */
.ProseMirror li ul,
.ProseMirror li ol {
  margin-top: 0.25rem;
  margin-bottom: 0;
}

/* Fix list indentation */
.ProseMirror li p {
  margin: 0;
}

/* Ensure proper indentation for nested lists */
.ProseMirror ul ul,
.ProseMirror ol ol,
.ProseMirror ul ol,
.ProseMirror ol ul {
  padding-left: 1.5rem;
}

/* Improve the appearance of list items */
.ProseMirror ul li {
  list-style-type: disc;
}

.ProseMirror ol li {
  list-style-type: decimal;
}

.ProseMirror ul li li {
  list-style-type: circle;
}

.ProseMirror ol li li {
  list-style-type: lower-alpha;
}

.ProseMirror ul li li li {
  list-style-type: square;
}

.ProseMirror ol li li li {
  list-style-type: lower-roman;
}

/* Custom list styling for better control */
.bullet-list {
  margin-left: 0 !important;
}

.ordered-list {
  margin-left: 0 !important;
}

/* Code blocks */
.ProseMirror pre {
  background-color: #f7f6f3;
  border-radius: 0.25rem;
  padding: 0.75rem;
  font-family: monospace;
  font-size: 0.875rem;
  overflow-x: auto;
}

/* Custom placeholder styling is handled by TipTap's placeholder extension */

